//**************************************
//File generated by TRAVERSE SDK::Code Generator tool.
//Copyright(c) 2014, Open Systems, Inc.
//Friday, October 24, 2014
//**************************************
//DO NOT edit this file. Instead use the partial class in WebContribImp.cs

#region using directives
using System;
using System.ComponentModel;
using System.Collections;
using System.Xml.Serialization;
using System.Runtime.Serialization;
using TRAVERSE.Core;
#endregion

namespace TRAVERSE.Business.WebContribImp
{
    ///<summary>
     //An object representation of 'tblArWebContribImp_CSI'.
     //</summary>
    [Serializable, DataObject]
    public abstract class WebContribImpBase : EntityBase
    {
        #region Fields
        [NonSerialized]
        ///<summary>
        ///inner data of the entity.
        ///</summary>
        private WebContribImp_CSIEntityData entityData;

        ///<summary>
        ///a backup of the inner data of the entity.
        ///</summary>
        private WebContribImp_CSIEntityData backupData;
        
        #endregion
        
        #region Constructor
        /// <summary>
        /// Instantiates the object and initializes inner data classes.
        /// </summary>
        protected WebContribImpBase(string compId):base(compId)
        {
            //initialize inner dataclass
            this.entityData = new WebContribImp_CSIEntityData();
            this.backupData = null;
        }
        #endregion
        
        #region Properties
        /// <summary>
        /// Gets or sets the database field id. 
        /// </summary>
        /// <value>This type is bigint.</value>
        /// <remarks>
        /// This property can not be set to null. 
        /// </remarks>
        [ReadOnlyAttribute(false), DescriptionAttribute(""), BindableAttribute(true)]
        [DataObjectField(true, true, false)]
        public virtual System.Int64 Id
        {
            get
            {
                return this.entityData.Id; 
            }
            set
            {
                if (!this.IsNew || this.entityData.Id == value)
                    return;
                    
                OnColumnChanging("Id");
                this.entityData.Id = value;
                OnColumnChanged("Id");
                OnPropertyChanged("Id");
            }
        }
        
        /// <summary>
        /// Gets or sets the database field TransId. 
        /// </summary>
        /// <value>This type is varchar.</value>
        /// <remarks>
        /// This property can not be set to null. 
        /// </remarks>
        [DescriptionAttribute(""), BindableAttribute(true)]
        [DataObjectField(false, false, false, 20)]
        public virtual System.String TransId
        {
            get
            {
                return this.entityData.TransId; 
            }
            set
            {
                if (this.entityData.TransId == value)
                    return;
                    
                OnColumnChanging("TransId");
                this.entityData.TransId = value;
                OnColumnChanged("TransId");
                OnPropertyChanged("TransId");
            }
        }
        
        /// <summary>
        /// Gets or sets the database field PmtDate. 
        /// </summary>
        /// <value>This type is datetime.</value>
        /// <remarks>
        /// This property can be set to null. 
        /// It is up to the developer to check whether a null value is valid.
        /// </remarks>
        [DescriptionAttribute(""), BindableAttribute(true)]
        [DataObjectField(false, false, true)]
        public virtual System.DateTime? PmtDate
        {
            get
            {
                return this.entityData.PmtDate; 
            }
            set
            {
                if (this.entityData.PmtDate == value && this.entityData.PmtDate != null )
                    return;
                    
                OnColumnChanging("PmtDate");
                this.entityData.PmtDate = value;
                OnColumnChanged("PmtDate");
                OnPropertyChanged("PmtDate");
            }
        }
        
        /// <summary>
        /// Gets or sets the database field PmtAmt. 
        /// </summary>
        /// <value>This type is decimal.</value>
        /// <remarks>
        /// This property can not be set to null. 
        /// </remarks>
        [DescriptionAttribute(""), BindableAttribute(true)]
        [DataObjectField(false, false, false)]
        public virtual System.Decimal PmtAmt
        {
            get
            {
                return this.entityData.PmtAmt; 
            }
            set
            {
                if (this.entityData.PmtAmt == value)
                    return;
                    
                OnColumnChanging("PmtAmt");
                this.entityData.PmtAmt = value;
                OnColumnChanged("PmtAmt");
                OnPropertyChanged("PmtAmt");
            }
        }
        
        /// <summary>
        /// Gets or sets the database field CheckNum. 
        /// </summary>
        /// <value>This type is varchar.</value>
        /// <remarks>
        /// This property can be set to null. 
        /// </remarks>
        [DescriptionAttribute(""), BindableAttribute(true)]
        [DataObjectField(false, false, true, 10)]
        public virtual System.String CheckNum
        {
            get
            {
                return this.entityData.CheckNum; 
            }
            set
            {
                if (this.entityData.CheckNum == value)
                    return;
                    
                OnColumnChanging("CheckNum");
                this.entityData.CheckNum = value;
                OnColumnChanged("CheckNum");
                OnPropertyChanged("CheckNum");
            }
        }
        
        /// <summary>
        /// Gets or sets the database field GroupId. 
        /// </summary>
        /// <value>This type is varchar.</value>
        /// <remarks>
        /// This property can be set to null. 
        /// </remarks>
        [DescriptionAttribute(""), BindableAttribute(true)]
        [DataObjectField(false, false, true, 9)]
        public virtual System.String GroupId
        {
            get
            {
                return this.entityData.GroupId; 
            }
            set
            {
                if (this.entityData.GroupId == value)
                    return;
                    
                OnColumnChanging("GroupId");
                this.entityData.GroupId = value;
                OnColumnChanged("GroupId");
                OnPropertyChanged("GroupId");
            }
        }
        
        /// <summary>
        /// Gets or sets the database field PmtMethodId. 
        /// </summary>
        /// <value>This type is varchar.</value>
        /// <remarks>
        /// This property can be set to null. 
        /// </remarks>
        [DescriptionAttribute(""), BindableAttribute(true)]
        [DataObjectField(false, false, true, 10)]
        public virtual System.String PmtMethodId
        {
            get
            {
                return this.entityData.PmtMethodId; 
            }
            set
            {
                if (this.entityData.PmtMethodId == value)
                    return;
                    
                OnColumnChanging("PmtMethodId");
                this.entityData.PmtMethodId = value;
                OnColumnChanged("PmtMethodId");
                OnPropertyChanged("PmtMethodId");
            }
        }
        
        /// <summary>
        /// Gets or sets the database field CcHolder. 
        /// </summary>
        /// <value>This type is varchar.</value>
        /// <remarks>
        /// This property can be set to null. 
        /// </remarks>
        [DescriptionAttribute(""), BindableAttribute(true)]
        [DataObjectField(false, false, true, 30)]
        public virtual System.String CcHolder
        {
            get
            {
                return this.entityData.CcHolder; 
            }
            set
            {
                if (this.entityData.CcHolder == value)
                    return;
                    
                OnColumnChanging("CcHolder");
                this.entityData.CcHolder = value;
                OnColumnChanged("CcHolder");
                OnPropertyChanged("CcHolder");
            }
        }
        
        /// <summary>
        /// Gets or sets the database field CcNum. 
        /// </summary>
        /// <value>This type is varchar.</value>
        /// <remarks>
        /// This property can be set to null. 
        /// </remarks>
        [DescriptionAttribute(""), BindableAttribute(true)]
        [DataObjectField(false, false, true, 20)]
        public virtual System.String CcNum
        {
            get
            {
                return this.entityData.CcNum; 
            }
            set
            {
                if (this.entityData.CcNum == value)
                    return;
                    
                OnColumnChanging("CcNum");
                this.entityData.CcNum = value;
                OnColumnChanged("CcNum");
                OnPropertyChanged("CcNum");
            }
        }
        
        /// <summary>
        /// Gets or sets the database field CcExpire. 
        /// </summary>
        /// <value>This type is datetime.</value>
        /// <remarks>
        /// This property can be set to null. 
        /// It is up to the developer to check whether a null value is valid.
        /// </remarks>
        [DescriptionAttribute(""), BindableAttribute(true)]
        [DataObjectField(false, false, true)]
        public virtual System.DateTime? CcExpire
        {
            get
            {
                return this.entityData.CcExpire; 
            }
            set
            {
                if (this.entityData.CcExpire == value && this.entityData.CcExpire != null )
                    return;
                    
                OnColumnChanging("CcExpire");
                this.entityData.CcExpire = value;
                OnColumnChanged("CcExpire");
                OnPropertyChanged("CcExpire");
            }
        }
        
        /// <summary>
        /// Gets or sets the database field CcAuth. 
        /// </summary>
        /// <value>This type is varchar.</value>
        /// <remarks>
        /// This property can be set to null. 
        /// </remarks>
        [DescriptionAttribute(""), BindableAttribute(true)]
        [DataObjectField(false, false, true, 10)]
        public virtual System.String CcAuth
        {
            get
            {
                return this.entityData.CcAuth; 
            }
            set
            {
                if (this.entityData.CcAuth == value)
                    return;
                    
                OnColumnChanging("CcAuth");
                this.entityData.CcAuth = value;
                OnColumnChanged("CcAuth");
                OnPropertyChanged("CcAuth");
            }
        }
        
        /// <summary>
        /// Gets or sets the database field CurrencyID. 
        /// </summary>
        /// <value>This type is varchar.</value>
        /// <remarks>
        /// This property can be set to null. 
        /// </remarks>
        [DescriptionAttribute(""), BindableAttribute(true)]
        [DataObjectField(false, false, true, 6)]
        public virtual System.String CurrencyId
        {
            get
            {
                return this.entityData.CurrencyId; 
            }
            set
            {
                if (this.entityData.CurrencyId == value)
                    return;
                    
                OnColumnChanging("CurrencyId");
                this.entityData.CurrencyId = value;
                OnColumnChanged("CurrencyId");
                OnPropertyChanged("CurrencyId");
            }
        }
        
        /// <summary>
        /// Gets or sets the database field ExchRate. 
        /// </summary>
        /// <value>This type is decimal.</value>
        /// <remarks>
        /// This property can not be set to null. 
        /// </remarks>
        [DescriptionAttribute(""), BindableAttribute(true)]
        [DataObjectField(false, false, false)]
        public virtual System.Decimal ExchRate
        {
            get
            {
                return this.entityData.ExchRate; 
            }
            set
            {
                if (this.entityData.ExchRate == value)
                    return;
                    
                OnColumnChanging("ExchRate");
                this.entityData.ExchRate = value;
                OnColumnChanged("ExchRate");
                OnPropertyChanged("ExchRate");
            }
        }
        
        /// <summary>
        /// Gets or sets the database field SourceCode. 
        /// </summary>
        /// <value>This type is varchar.</value>
        /// <remarks>
        /// This property can be set to null. 
        /// </remarks>
        [DescriptionAttribute(""), BindableAttribute(true)]
        [DataObjectField(false, false, true, 6)]
        public virtual System.String SourceCode
        {
            get
            {
                return this.entityData.SourceCode; 
            }
            set
            {
                if (this.entityData.SourceCode == value)
                    return;
                    
                OnColumnChanging("SourceCode");
                this.entityData.SourceCode = value;
                OnColumnChanged("SourceCode");
                OnPropertyChanged("SourceCode");
            }
        }
        
        /// <summary>
        /// Gets or sets the database field Area. 
        /// </summary>
        /// <value>This type is varchar.</value>
        /// <remarks>
        /// This property can be set to null. 
        /// </remarks>
        [DescriptionAttribute(""), BindableAttribute(true)]
        [DataObjectField(false, false, true, 3)]
        public virtual System.String Area
        {
            get
            {
                return this.entityData.Area; 
            }
            set
            {
                if (this.entityData.Area == value)
                    return;
                    
                OnColumnChanging("Area");
                this.entityData.Area = value;
                OnColumnChanged("Area");
                OnPropertyChanged("Area");
            }
        }
        
        /// <summary>
        /// Gets or sets the database field CustName. 
        /// </summary>
        /// <value>This type is varchar.</value>
        /// <remarks>
        /// This property can be set to null. 
        /// </remarks>
        [DescriptionAttribute(""), BindableAttribute(true)]
        [DataObjectField(false, false, true, 30)]
        public virtual System.String CustName
        {
            get
            {
                return this.entityData.CustName; 
            }
            set
            {
                if (this.entityData.CustName == value)
                    return;
                    
                OnColumnChanging("CustName");
                this.entityData.CustName = value;
                OnColumnChanged("CustName");
                OnPropertyChanged("CustName");
            }
        }
        
        /// <summary>
        /// Gets or sets the database field Addr1. 
        /// </summary>
        /// <value>This type is varchar.</value>
        /// <remarks>
        /// This property can be set to null. 
        /// </remarks>
        [DescriptionAttribute(""), BindableAttribute(true)]
        [DataObjectField(false, false, true, 30)]
        public virtual System.String Addr1
        {
            get
            {
                return this.entityData.Addr1; 
            }
            set
            {
                if (this.entityData.Addr1 == value)
                    return;
                    
                OnColumnChanging("Addr1");
                this.entityData.Addr1 = value;
                OnColumnChanged("Addr1");
                OnPropertyChanged("Addr1");
            }
        }
        
        /// <summary>
        /// Gets or sets the database field Addr2. 
        /// </summary>
        /// <value>This type is varchar.</value>
        /// <remarks>
        /// This property can be set to null. 
        /// </remarks>
        [DescriptionAttribute(""), BindableAttribute(true)]
        [DataObjectField(false, false, true, 60)]
        public virtual System.String Addr2
        {
            get
            {
                return this.entityData.Addr2; 
            }
            set
            {
                if (this.entityData.Addr2 == value)
                    return;
                    
                OnColumnChanging("Addr2");
                this.entityData.Addr2 = value;
                OnColumnChanged("Addr2");
                OnPropertyChanged("Addr2");
            }
        }
        
        /// <summary>
        /// Gets or sets the database field City. 
        /// </summary>
        /// <value>This type is varchar.</value>
        /// <remarks>
        /// This property can be set to null. 
        /// </remarks>
        [DescriptionAttribute(""), BindableAttribute(true)]
        [DataObjectField(false, false, true, 30)]
        public virtual System.String City
        {
            get
            {
                return this.entityData.City; 
            }
            set
            {
                if (this.entityData.City == value)
                    return;
                    
                OnColumnChanging("City");
                this.entityData.City = value;
                OnColumnChanged("City");
                OnPropertyChanged("City");
            }
        }
        
        /// <summary>
        /// Gets or sets the database field Region. 
        /// </summary>
        /// <value>This type is varchar.</value>
        /// <remarks>
        /// This property can be set to null. 
        /// </remarks>
        [DescriptionAttribute(""), BindableAttribute(true)]
        [DataObjectField(false, false, true, 10)]
        public virtual System.String Region
        {
            get
            {
                return this.entityData.Region; 
            }
            set
            {
                if (this.entityData.Region == value)
                    return;
                    
                OnColumnChanging("Region");
                this.entityData.Region = value;
                OnColumnChanged("Region");
                OnPropertyChanged("Region");
            }
        }
        
        /// <summary>
        /// Gets or sets the database field Country. 
        /// </summary>
        /// <value>This type is varchar.</value>
        /// <remarks>
        /// This property can be set to null. 
        /// </remarks>
        [DescriptionAttribute(""), BindableAttribute(true)]
        [DataObjectField(false, false, true, 6)]
        public virtual System.String Country
        {
            get
            {
                return this.entityData.Country; 
            }
            set
            {
                if (this.entityData.Country == value)
                    return;
                    
                OnColumnChanging("Country");
                this.entityData.Country = value;
                OnColumnChanged("Country");
                OnPropertyChanged("Country");
            }
        }
        
        /// <summary>
        /// Gets or sets the database field PostalCode. 
        /// </summary>
        /// <value>This type is varchar.</value>
        /// <remarks>
        /// This property can be set to null. 
        /// </remarks>
        [DescriptionAttribute(""), BindableAttribute(true)]
        [DataObjectField(false, false, true, 10)]
        public virtual System.String PostalCode
        {
            get
            {
                return this.entityData.PostalCode; 
            }
            set
            {
                if (this.entityData.PostalCode == value)
                    return;
                    
                OnColumnChanging("PostalCode");
                this.entityData.PostalCode = value;
                OnColumnChanged("PostalCode");
                OnPropertyChanged("PostalCode");
            }
        }
        
        /// <summary>
        /// Gets or sets the database field spAcknowlgmnt. 
        /// </summary>
        /// <value>This type is varchar.</value>
        /// <remarks>
        /// This property can be set to null. 
        /// </remarks>
        [DescriptionAttribute(""), BindableAttribute(true)]
        [DataObjectField(false, false, true, 75)]
        public virtual System.String SpAcknowlgmnt
        {
            get
            {
                return this.entityData.SpAcknowlgmnt; 
            }
            set
            {
                if (this.entityData.SpAcknowlgmnt == value)
                    return;
                    
                OnColumnChanging("SpAcknowlgmnt");
                this.entityData.SpAcknowlgmnt = value;
                OnColumnChanged("SpAcknowlgmnt");
                OnPropertyChanged("SpAcknowlgmnt");
            }
        }
        
        /// <summary>
        /// Gets or sets the database field Lang. 
        /// </summary>
        /// <value>This type is varchar.</value>
        /// <remarks>
        /// This property can be set to null. 
        /// </remarks>
        [DescriptionAttribute(""), BindableAttribute(true)]
        [DataObjectField(false, false, true, 2)]
        public virtual System.String Lang
        {
            get
            {
                return this.entityData.Lang; 
            }
            set
            {
                if (this.entityData.Lang == value)
                    return;
                    
                OnColumnChanging("Lang");
                this.entityData.Lang = value;
                OnColumnChanged("Lang");
                OnPropertyChanged("Lang");
            }
        }
        
        /// <summary>
        /// Gets or sets the database field DntSendAcknYN. 
        /// </summary>
        /// <value>This type is bit.</value>
        /// <remarks>
        /// This property can not be set to null. 
        /// </remarks>
        [DescriptionAttribute(""), BindableAttribute(true)]
        [DataObjectField(false, false, false)]
        public virtual System.Boolean DntSendAcknYN
        {
            get
            {
                return this.entityData.DntSendAcknYN; 
            }
            set
            {
                if (this.entityData.DntSendAcknYN == value)
                    return;
                    
                OnColumnChanging("DntSendAcknYN");
                this.entityData.DntSendAcknYN = value;
                OnColumnChanged("DntSendAcknYN");
                OnPropertyChanged("DntSendAcknYN");
            }
        }
        
        /// <summary>
        /// Gets or sets the database field RptExchRate. 
        /// </summary>
        /// <value>This type is decimal.</value>
        /// <remarks>
        /// This property can not be set to null. 
        /// </remarks>
        [DescriptionAttribute(""), BindableAttribute(true)]
        [DataObjectField(false, false, false)]
        public virtual System.Decimal RptExchRate
        {
            get
            {
                return this.entityData.RptExchRate; 
            }
            set
            {
                if (this.entityData.RptExchRate == value)
                    return;
                    
                OnColumnChanging("RptExchRate");
                this.entityData.RptExchRate = value;
                OnColumnChanged("RptExchRate");
                OnPropertyChanged("RptExchRate");
            }
        }
        
        /// <summary>
        /// Gets or sets the database field EmailAddr. 
        /// </summary>
        /// <value>This type is varchar.</value>
        /// <remarks>
        /// This property can be set to null. 
        /// </remarks>
        [DescriptionAttribute(""), BindableAttribute(true)]
        [DataObjectField(false, false, true, 255)]
        public virtual System.String EmailAddr
        {
            get
            {
                return this.entityData.EmailAddr; 
            }
            set
            {
                if (this.entityData.EmailAddr == value)
                    return;
                    
                OnColumnChanging("EmailAddr");
                this.entityData.EmailAddr = value;
                OnColumnChanged("EmailAddr");
                OnPropertyChanged("EmailAddr");
            }
        }
        
        /// <summary>
        /// Gets or sets the database field SendEmailYN. 
        /// </summary>
        /// <value>This type is bit.</value>
        /// <remarks>
        /// This property can not be set to null. 
        /// </remarks>
        [DescriptionAttribute(""), BindableAttribute(true)]
        [DataObjectField(false, false, false)]
        public virtual System.Boolean SendEmailYN
        {
            get
            {
                return this.entityData.SendEmailYN; 
            }
            set
            {
                if (this.entityData.SendEmailYN == value)
                    return;
                    
                OnColumnChanging("SendEmailYN");
                this.entityData.SendEmailYN = value;
                OnColumnChanged("SendEmailYN");
                OnPropertyChanged("SendEmailYN");
            }
        }
        
        /// <summary>
        /// Gets or sets the database field ValidYN. 
        /// </summary>
        /// <value>This type is bit.</value>
        /// <remarks>
        /// This property can not be set to null. 
        /// </remarks>
        [DescriptionAttribute(""), BindableAttribute(true)]
        [DataObjectField(false, false, false)]
        public virtual System.Boolean ValidYN
        {
            get
            {
                return this.entityData.ValidYN; 
            }
            set
            {
                if (this.entityData.ValidYN == value)
                    return;
                    
                OnColumnChanging("ValidYN");
                this.entityData.ValidYN = value;
                OnColumnChanged("ValidYN");
                OnPropertyChanged("ValidYN");
            }
        }
        
        /// <summary>
        /// Gets or sets the database field ImportedYN. 
        /// </summary>
        /// <value>This type is bit.</value>
        /// <remarks>
        /// This property can not be set to null. 
        /// </remarks>
        [DescriptionAttribute(""), BindableAttribute(true)]
        [DataObjectField(false, false, false)]
        public virtual System.Boolean ImportedYN
        {
            get
            {
                return this.entityData.ImportedYN; 
            }
            set
            {
                if (this.entityData.ImportedYN == value)
                    return;
                    
                OnColumnChanging("ImportedYN");
                this.entityData.ImportedYN = value;
                OnColumnChanged("ImportedYN");
                OnPropertyChanged("ImportedYN");
            }
        }
        
        /// <summary>
        /// Gets or sets the database field TravRcptHeaderID. 
        /// </summary>
        /// <value>This type is int.</value>
        /// <remarks>
        /// This property can be set to null. 
        /// It is up to the developer to check whether a null value is valid.
        /// </remarks>
        [DescriptionAttribute(""), BindableAttribute(true)]
        [DataObjectField(false, false, true)]
        public virtual System.Int32? TravRcptHeaderId
        {
            get
            {
                return this.entityData.TravRcptHeaderId; 
            }
            set
            {
                if (this.entityData.TravRcptHeaderId == value && this.entityData.TravRcptHeaderId != null )
                    return;
                    
                OnColumnChanging("TravRcptHeaderId");
                this.entityData.TravRcptHeaderId = value;
                OnColumnChanged("TravRcptHeaderId");
                OnPropertyChanged("TravRcptHeaderId");
            }
        }
        
        /// <summary>
        /// Gets or sets the database field WebId. 
        /// </summary>
        /// <value>This type is bigint.</value>
        /// <remarks>
        /// This property can not be set to null. 
        /// </remarks>
        [DescriptionAttribute(""), BindableAttribute(true)]
        [DataObjectField(false, false, false)]
        public virtual System.Int64 WebId
        {
            get
            {
                return this.entityData.WebId; 
            }
            set
            {
                if (this.entityData.WebId == value)
                    return;
                    
                OnColumnChanging("WebId");
                this.entityData.WebId = value;
                OnColumnChanged("WebId");
                OnPropertyChanged("WebId");
            }
        }
        
        /// <summary>
        /// Gets or sets the database field SkipYN. 
        /// </summary>
        /// <value>This type is bit.</value>
        /// <remarks>
        /// This property can be set to null. 
        /// It is up to the developer to check whether a null value is valid.
        /// </remarks>
        [DescriptionAttribute(""), BindableAttribute(true)]
        [DataObjectField(false, false, true)]
        public virtual System.Boolean? SkipYN
        {
            get
            {
                return this.entityData.SkipYN; 
            }
            set
            {
                if (this.entityData.SkipYN == value && this.entityData.SkipYN != null )
                    return;
                    
                OnColumnChanging("SkipYN");
                this.entityData.SkipYN = value;
                OnColumnChanged("SkipYN");
                OnPropertyChanged("SkipYN");
            }
        }
        
        /// <summary>
        /// Gets or sets the database field errdescr. 
        /// </summary>
        /// <value>This type is varchar.</value>
        /// <remarks>
        /// This property can be set to null. 
        /// </remarks>
        [DescriptionAttribute(""), BindableAttribute(true)]
        [DataObjectField(false, false, true, 550)]
        public virtual System.String Errdescr
        {
            get
            {
                return this.entityData.Errdescr; 
            }
            set
            {
                if (this.entityData.Errdescr == value)
                    return;
                    
                OnColumnChanging("Errdescr");
                this.entityData.Errdescr = value;
                OnColumnChanged("Errdescr");
                OnPropertyChanged("Errdescr");
            }
        }
        
        /// <summary>
        /// Gets or sets the database field GroupCountry. 
        /// </summary>
        /// <value>This type is varchar.</value>
        /// <remarks>
        /// This property can be set to null. 
        /// </remarks>
        [DescriptionAttribute(""), BindableAttribute(true)]
        [DataObjectField(false, false, true, 2)]
        public virtual System.String GroupCountry
        {
            get
            {
                return this.entityData.GroupCountry; 
            }
            set
            {
                if (this.entityData.GroupCountry == value)
                    return;
                    
                OnColumnChanging("GroupCountry");
                this.entityData.GroupCountry = value;
                OnColumnChanged("GroupCountry");
                OnPropertyChanged("GroupCountry");
            }
        }
        
        /// <summary>
        /// Gets or sets the database field GroupState. 
        /// </summary>
        /// <value>This type is varchar.</value>
        /// <remarks>
        /// This property can be set to null. 
        /// </remarks>
        [DescriptionAttribute(""), BindableAttribute(true)]
        [DataObjectField(false, false, true, 2)]
        public virtual System.String GroupState
        {
            get
            {
                return this.entityData.GroupState; 
            }
            set
            {
                if (this.entityData.GroupState == value)
                    return;
                    
                OnColumnChanging("GroupState");
                this.entityData.GroupState = value;
                OnColumnChanged("GroupState");
                OnPropertyChanged("GroupState");
            }
        }
        
        /// <summary>
        /// Gets or sets the database field GroupCity. 
        /// </summary>
        /// <value>This type is varchar.</value>
        /// <remarks>
        /// This property can be set to null. 
        /// </remarks>
        [DescriptionAttribute(""), BindableAttribute(true)]
        [DataObjectField(false, false, true, 30)]
        public virtual System.String GroupCity
        {
            get
            {
                return this.entityData.GroupCity; 
            }
            set
            {
                if (this.entityData.GroupCity == value)
                    return;
                    
                OnColumnChanging("GroupCity");
                this.entityData.GroupCity = value;
                OnColumnChanged("GroupCity");
                OnPropertyChanged("GroupCity");
            }
        }
        
        /// <summary>
        /// Gets or sets the database field GroupName. 
        /// </summary>
        /// <value>This type is varchar.</value>
        /// <remarks>
        /// This property can be set to null. 
        /// </remarks>
        [DescriptionAttribute(""), BindableAttribute(true)]
        [DataObjectField(false, false, true, 100)]
        public virtual System.String GroupName
        {
            get
            {
                return this.entityData.GroupName; 
            }
            set
            {
                if (this.entityData.GroupName == value)
                    return;
                    
                OnColumnChanging("GroupName");
                this.entityData.GroupName = value;
                OnColumnChanged("GroupName");
                OnPropertyChanged("GroupName");
            }
        }
        
        /// <summary>
        /// Gets or sets the database field BillToAddr1. 
        /// </summary>
        /// <value>This type is varchar.</value>
        /// <remarks>
        /// This property can be set to null. 
        /// </remarks>
        [DescriptionAttribute(""), BindableAttribute(true)]
        [DataObjectField(false, false, true, 30)]
        public virtual System.String BillToAddr1
        {
            get
            {
                return this.entityData.BillToAddr1; 
            }
            set
            {
                if (this.entityData.BillToAddr1 == value)
                    return;
                    
                OnColumnChanging("BillToAddr1");
                this.entityData.BillToAddr1 = value;
                OnColumnChanged("BillToAddr1");
                OnPropertyChanged("BillToAddr1");
            }
        }
        
        /// <summary>
        /// Gets or sets the database field BillToAddr2. 
        /// </summary>
        /// <value>This type is varchar.</value>
        /// <remarks>
        /// This property can be set to null. 
        /// </remarks>
        [DescriptionAttribute(""), BindableAttribute(true)]
        [DataObjectField(false, false, true, 60)]
        public virtual System.String BillToAddr2
        {
            get
            {
                return this.entityData.BillToAddr2; 
            }
            set
            {
                if (this.entityData.BillToAddr2 == value)
                    return;
                    
                OnColumnChanging("BillToAddr2");
                this.entityData.BillToAddr2 = value;
                OnColumnChanged("BillToAddr2");
                OnPropertyChanged("BillToAddr2");
            }
        }
        
        /// <summary>
        /// Gets or sets the database field BillToCity. 
        /// </summary>
        /// <value>This type is varchar.</value>
        /// <remarks>
        /// This property can be set to null. 
        /// </remarks>
        [DescriptionAttribute(""), BindableAttribute(true)]
        [DataObjectField(false, false, true, 30)]
        public virtual System.String BillToCity
        {
            get
            {
                return this.entityData.BillToCity; 
            }
            set
            {
                if (this.entityData.BillToCity == value)
                    return;
                    
                OnColumnChanging("BillToCity");
                this.entityData.BillToCity = value;
                OnColumnChanged("BillToCity");
                OnPropertyChanged("BillToCity");
            }
        }
        
        /// <summary>
        /// Gets or sets the database field BillToRegion. 
        /// </summary>
        /// <value>This type is varchar.</value>
        /// <remarks>
        /// This property can be set to null. 
        /// </remarks>
        [DescriptionAttribute(""), BindableAttribute(true)]
        [DataObjectField(false, false, true, 10)]
        public virtual System.String BillToRegion
        {
            get
            {
                return this.entityData.BillToRegion; 
            }
            set
            {
                if (this.entityData.BillToRegion == value)
                    return;
                    
                OnColumnChanging("BillToRegion");
                this.entityData.BillToRegion = value;
                OnColumnChanged("BillToRegion");
                OnPropertyChanged("BillToRegion");
            }
        }
        
        /// <summary>
        /// Gets or sets the database field BillToCountry. 
        /// </summary>
        /// <value>This type is varchar.</value>
        /// <remarks>
        /// This property can be set to null. 
        /// </remarks>
        [DescriptionAttribute(""), BindableAttribute(true)]
        [DataObjectField(false, false, true, 6)]
        public virtual System.String BillToCountry
        {
            get
            {
                return this.entityData.BillToCountry; 
            }
            set
            {
                if (this.entityData.BillToCountry == value)
                    return;
                    
                OnColumnChanging("BillToCountry");
                this.entityData.BillToCountry = value;
                OnColumnChanged("BillToCountry");
                OnPropertyChanged("BillToCountry");
            }
        }
        
        /// <summary>
        /// Gets or sets the database field BillToPostalCode. 
        /// </summary>
        /// <value>This type is varchar.</value>
        /// <remarks>
        /// This property can be set to null. 
        /// </remarks>
        [DescriptionAttribute(""), BindableAttribute(true)]
        [DataObjectField(false, false, true, 10)]
        public virtual System.String BillToPostalCode
        {
            get
            {
                return this.entityData.BillToPostalCode; 
            }
            set
            {
                if (this.entityData.BillToPostalCode == value)
                    return;
                    
                OnColumnChanging("BillToPostalCode");
                this.entityData.BillToPostalCode = value;
                OnColumnChanged("BillToPostalCode");
                OnPropertyChanged("BillToPostalCode");
            }
        }
        
        /// <summary>
        /// Gets or sets the database field CF. 
        /// </summary>
        /// <value>This type is xml.</value>
        /// <remarks>
        /// This property can be set to null. 
        /// </remarks>
        [DescriptionAttribute(""), BindableAttribute(true)]
        [DataObjectField(false, false, true)]
        public virtual System.String CF
        {
            get
            {
                return this.entityData.CF; 
            }
            set
            {
                if (this.entityData.CF == value)
                    return;
                    
                OnColumnChanging("CF");
                this.entityData.CF = value;
                OnColumnChanged("CF");
                OnPropertyChanged("CF");
                this.CustomFieldData = value;
            }
        }
        
        #endregion "Properties"
        
        #region Table Meta Data
        /// <summary>
        ///The name of the underlying database table.
        /// </summary>
        [BrowsableAttribute(false), XmlIgnoreAttribute()]
        public static string TableName
        {
            get { return "tblArWebContribImp_CSI"; }
        }
        
        /// <summary>
        ///The name of the underlying database table's columns.
        /// </summary>
        [BrowsableAttribute(false), XmlIgnoreAttribute()]
        public static string[] TableColumns
        {
            get
            {
                return new string[] {"id", "TransId", "PmtDate", "PmtAmt", "CheckNum", "GroupId", "PmtMethodId", "CcHolder", "CcNum", "CcExpire", "CcAuth", "CurrencyID", "ExchRate", "SourceCode", "Area", "CustName", "Addr1", "Addr2", "City", "Region", "Country", "PostalCode", "spAcknowlgmnt", "Lang", "DntSendAcknYN", "RptExchRate", "EmailAddr", "SendEmailYN", "ValidYN", "ImportedYN", "TravRcptHeaderID", "WebId", "SkipYN", "errdescr", "GroupCountry", "GroupState", "GroupCity", "GroupName", "BillToAddr1", "BillToAddr2", "BillToCity", "BillToRegion", "BillToCountry", "BillToPostalCode", "CF"};
            }
        }
        /// <summary>
        /// Array containing name of primary key columns.
        /// </summary>
        [BrowsableAttribute(false), XmlIgnoreAttribute()]
        public static string[] KeyColumns
        {
            get { return new string[] {"id"}; }
        }
        #region WebContribImpColumn Enum
        
        /// <summary>
        /// Enumerate the WebContribImp columns.
        /// </summary>
        [Serializable]
        public enum Columns
        {
            [EnumTextValue("id")]
            [ColumnEnum("id", typeof(System.Int64), System.Data.DbType.Int64, true, true, false)]
            Id,
            [EnumTextValue("TransId")]
            [ColumnEnum("TransId", typeof(System.String), System.Data.DbType.AnsiString, false, false, false, 20)]
            TransId,
            [EnumTextValue("PmtDate")]
            [ColumnEnum("PmtDate", typeof(System.DateTime), System.Data.DbType.DateTime, false, false, true)]
            PmtDate,
            [EnumTextValue("PmtAmt")]
            [ColumnEnum("PmtAmt", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, false)]
            PmtAmt,
            [EnumTextValue("CheckNum")]
            [ColumnEnum("CheckNum", typeof(System.String), System.Data.DbType.AnsiString, false, false, true, 10)]
            CheckNum,
            [EnumTextValue("GroupId")]
            [ColumnEnum("GroupId", typeof(System.String), System.Data.DbType.AnsiString, false, false, true, 9)]
            GroupId,
            [EnumTextValue("PmtMethodId")]
            [ColumnEnum("PmtMethodId", typeof(System.String), System.Data.DbType.AnsiString, false, false, true, 10)]
            PmtMethodId,
            [EnumTextValue("CcHolder")]
            [ColumnEnum("CcHolder", typeof(System.String), System.Data.DbType.AnsiString, false, false, true, 30)]
            CcHolder,
            [EnumTextValue("CcNum")]
            [ColumnEnum("CcNum", typeof(System.String), System.Data.DbType.AnsiString, false, false, true, 20)]
            CcNum,
            [EnumTextValue("CcExpire")]
            [ColumnEnum("CcExpire", typeof(System.DateTime), System.Data.DbType.DateTime, false, false, true)]
            CcExpire,
            [EnumTextValue("CcAuth")]
            [ColumnEnum("CcAuth", typeof(System.String), System.Data.DbType.AnsiString, false, false, true, 10)]
            CcAuth,
            [EnumTextValue("CurrencyID")]
            [ColumnEnum("CurrencyID", typeof(System.String), System.Data.DbType.AnsiString, false, false, true, 6)]
            CurrencyId,
            [EnumTextValue("ExchRate")]
            [ColumnEnum("ExchRate", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, false)]
            ExchRate,
            [EnumTextValue("SourceCode")]
            [ColumnEnum("SourceCode", typeof(System.String), System.Data.DbType.AnsiString, false, false, true, 6)]
            SourceCode,
            [EnumTextValue("Area")]
            [ColumnEnum("Area", typeof(System.String), System.Data.DbType.AnsiString, false, false, true, 3)]
            Area,
            [EnumTextValue("CustName")]
            [ColumnEnum("CustName", typeof(System.String), System.Data.DbType.AnsiString, false, false, true, 30)]
            CustName,
            [EnumTextValue("Addr1")]
            [ColumnEnum("Addr1", typeof(System.String), System.Data.DbType.AnsiString, false, false, true, 30)]
            Addr1,
            [EnumTextValue("Addr2")]
            [ColumnEnum("Addr2", typeof(System.String), System.Data.DbType.AnsiString, false, false, true, 60)]
            Addr2,
            [EnumTextValue("City")]
            [ColumnEnum("City", typeof(System.String), System.Data.DbType.AnsiString, false, false, true, 30)]
            City,
            [EnumTextValue("Region")]
            [ColumnEnum("Region", typeof(System.String), System.Data.DbType.AnsiString, false, false, true, 10)]
            Region,
            [EnumTextValue("Country")]
            [ColumnEnum("Country", typeof(System.String), System.Data.DbType.AnsiString, false, false, true, 6)]
            Country,
            [EnumTextValue("PostalCode")]
            [ColumnEnum("PostalCode", typeof(System.String), System.Data.DbType.AnsiString, false, false, true, 10)]
            PostalCode,
            [EnumTextValue("spAcknowlgmnt")]
            [ColumnEnum("spAcknowlgmnt", typeof(System.String), System.Data.DbType.AnsiString, false, false, true, 75)]
            SpAcknowlgmnt,
            [EnumTextValue("Lang")]
            [ColumnEnum("Lang", typeof(System.String), System.Data.DbType.AnsiString, false, false, true, 2)]
            Lang,
            [EnumTextValue("DntSendAcknYN")]
            [ColumnEnum("DntSendAcknYN", typeof(System.Boolean), System.Data.DbType.Boolean, false, false, false)]
            DntSendAcknYN,
            [EnumTextValue("RptExchRate")]
            [ColumnEnum("RptExchRate", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, false)]
            RptExchRate,
            [EnumTextValue("EmailAddr")]
            [ColumnEnum("EmailAddr", typeof(System.String), System.Data.DbType.AnsiString, false, false, true, 255)]
            EmailAddr,
            [EnumTextValue("SendEmailYN")]
            [ColumnEnum("SendEmailYN", typeof(System.Boolean), System.Data.DbType.Boolean, false, false, false)]
            SendEmailYN,
            [EnumTextValue("ValidYN")]
            [ColumnEnum("ValidYN", typeof(System.Boolean), System.Data.DbType.Boolean, false, false, false)]
            ValidYN,
            [EnumTextValue("ImportedYN")]
            [ColumnEnum("ImportedYN", typeof(System.Boolean), System.Data.DbType.Boolean, false, false, false)]
            ImportedYN,
            [EnumTextValue("TravRcptHeaderID")]
            [ColumnEnum("TravRcptHeaderID", typeof(System.Int32), System.Data.DbType.Int32, false, false, true)]
            TravRcptHeaderId,
            [EnumTextValue("WebId")]
            [ColumnEnum("WebId", typeof(System.Int64), System.Data.DbType.Int64, false, false, false)]
            WebId,
            [EnumTextValue("SkipYN")]
            [ColumnEnum("SkipYN", typeof(System.Boolean), System.Data.DbType.Boolean, false, false, true)]
            SkipYN,
            [EnumTextValue("errdescr")]
            [ColumnEnum("errdescr", typeof(System.String), System.Data.DbType.AnsiString, false, false, true, 550)]
            Errdescr,
            [EnumTextValue("GroupCountry")]
            [ColumnEnum("GroupCountry", typeof(System.String), System.Data.DbType.AnsiString, false, false, true, 2)]
            GroupCountry,
            [EnumTextValue("GroupState")]
            [ColumnEnum("GroupState", typeof(System.String), System.Data.DbType.AnsiString, false, false, true, 2)]
            GroupState,
            [EnumTextValue("GroupCity")]
            [ColumnEnum("GroupCity", typeof(System.String), System.Data.DbType.AnsiString, false, false, true, 30)]
            GroupCity,
            [EnumTextValue("GroupName")]
            [ColumnEnum("GroupName", typeof(System.String), System.Data.DbType.AnsiString, false, false, true, 100)]
            GroupName,
            [EnumTextValue("BillToAddr1")]
            [ColumnEnum("BillToAddr1", typeof(System.String), System.Data.DbType.AnsiString, false, false, true, 30)]
            BillToAddr1,
            [EnumTextValue("BillToAddr2")]
            [ColumnEnum("BillToAddr2", typeof(System.String), System.Data.DbType.AnsiString, false, false, true, 60)]
            BillToAddr2,
            [EnumTextValue("BillToCity")]
            [ColumnEnum("BillToCity", typeof(System.String), System.Data.DbType.AnsiString, false, false, true, 30)]
            BillToCity,
            [EnumTextValue("BillToRegion")]
            [ColumnEnum("BillToRegion", typeof(System.String), System.Data.DbType.AnsiString, false, false, true, 10)]
            BillToRegion,
            [EnumTextValue("BillToCountry")]
            [ColumnEnum("BillToCountry", typeof(System.String), System.Data.DbType.AnsiString, false, false, true, 6)]
            BillToCountry,
            [EnumTextValue("BillToPostalCode")]
            [ColumnEnum("BillToPostalCode", typeof(System.String), System.Data.DbType.AnsiString, false, false, true, 10)]
            BillToPostalCode,
            [EnumTextValue("CF")]
            [ColumnEnum("CF", typeof(System.String), System.Data.DbType.Xml, false, false, true)]
            CF
        }//End enum
    
        #endregion WebContribImpColumn Enum        
        #endregion     
        #region Validation
        
        /// <summary>
        /// Assigns validation rules to this object based on model definition.
        /// </summary>
        /// <remarks>This method overrides the base class to add schema related validation.</remarks>
        protected override void AddValidationRules()
        {
            //Validation rules based on database schema.
            ValidationRules.AddRule(Validation.CommonRules.NotNull,"TransId");
            ValidationRules.AddRule(Validation.CommonRules.StringMaxLength,new Validation.CommonRules.MaxLengthRuleArgs("TransId",20));
            ValidationRules.AddRule(Validation.CommonRules.StringMaxLength,new Validation.CommonRules.MaxLengthRuleArgs("CheckNum",10));
            ValidationRules.AddRule(Validation.CommonRules.StringMaxLength,new Validation.CommonRules.MaxLengthRuleArgs("GroupId",9));
            ValidationRules.AddRule(Validation.CommonRules.StringMaxLength,new Validation.CommonRules.MaxLengthRuleArgs("PmtMethodId",10));
            ValidationRules.AddRule(Validation.CommonRules.StringMaxLength,new Validation.CommonRules.MaxLengthRuleArgs("CcHolder",30));
            ValidationRules.AddRule(Validation.CommonRules.StringMaxLength,new Validation.CommonRules.MaxLengthRuleArgs("CcNum",20));
            ValidationRules.AddRule(Validation.CommonRules.StringMaxLength,new Validation.CommonRules.MaxLengthRuleArgs("CcAuth",10));
            ValidationRules.AddRule(Validation.CommonRules.StringMaxLength,new Validation.CommonRules.MaxLengthRuleArgs("CurrencyId",6));
            ValidationRules.AddRule(Validation.CommonRules.StringMaxLength,new Validation.CommonRules.MaxLengthRuleArgs("SourceCode",6));
            ValidationRules.AddRule(Validation.CommonRules.StringMaxLength,new Validation.CommonRules.MaxLengthRuleArgs("Area",3));
            ValidationRules.AddRule(Validation.CommonRules.StringMaxLength,new Validation.CommonRules.MaxLengthRuleArgs("CustName",30));
            ValidationRules.AddRule(Validation.CommonRules.StringMaxLength,new Validation.CommonRules.MaxLengthRuleArgs("Addr1",30));
            ValidationRules.AddRule(Validation.CommonRules.StringMaxLength,new Validation.CommonRules.MaxLengthRuleArgs("Addr2",60));
            ValidationRules.AddRule(Validation.CommonRules.StringMaxLength,new Validation.CommonRules.MaxLengthRuleArgs("City",30));
            ValidationRules.AddRule(Validation.CommonRules.StringMaxLength,new Validation.CommonRules.MaxLengthRuleArgs("Region",10));
            ValidationRules.AddRule(Validation.CommonRules.StringMaxLength,new Validation.CommonRules.MaxLengthRuleArgs("Country",6));
            ValidationRules.AddRule(Validation.CommonRules.StringMaxLength,new Validation.CommonRules.MaxLengthRuleArgs("PostalCode",10));
            ValidationRules.AddRule(Validation.CommonRules.StringMaxLength,new Validation.CommonRules.MaxLengthRuleArgs("SpAcknowlgmnt",75));
            ValidationRules.AddRule(Validation.CommonRules.StringMaxLength,new Validation.CommonRules.MaxLengthRuleArgs("Lang",2));
            ValidationRules.AddRule(Validation.CommonRules.StringMaxLength,new Validation.CommonRules.MaxLengthRuleArgs("EmailAddr",255));
            ValidationRules.AddRule(Validation.CommonRules.StringMaxLength,new Validation.CommonRules.MaxLengthRuleArgs("Errdescr",550));
            ValidationRules.AddRule(Validation.CommonRules.StringMaxLength,new Validation.CommonRules.MaxLengthRuleArgs("GroupCountry",2));
            ValidationRules.AddRule(Validation.CommonRules.StringMaxLength,new Validation.CommonRules.MaxLengthRuleArgs("GroupState",2));
            ValidationRules.AddRule(Validation.CommonRules.StringMaxLength,new Validation.CommonRules.MaxLengthRuleArgs("GroupCity",30));
            ValidationRules.AddRule(Validation.CommonRules.StringMaxLength,new Validation.CommonRules.MaxLengthRuleArgs("GroupName",100));
            ValidationRules.AddRule(Validation.CommonRules.StringMaxLength,new Validation.CommonRules.MaxLengthRuleArgs("BillToAddr1",30));
            ValidationRules.AddRule(Validation.CommonRules.StringMaxLength,new Validation.CommonRules.MaxLengthRuleArgs("BillToAddr2",60));
            ValidationRules.AddRule(Validation.CommonRules.StringMaxLength,new Validation.CommonRules.MaxLengthRuleArgs("BillToCity",30));
            ValidationRules.AddRule(Validation.CommonRules.StringMaxLength,new Validation.CommonRules.MaxLengthRuleArgs("BillToRegion",10));
            ValidationRules.AddRule(Validation.CommonRules.StringMaxLength,new Validation.CommonRules.MaxLengthRuleArgs("BillToCountry",6));
            ValidationRules.AddRule(Validation.CommonRules.StringMaxLength,new Validation.CommonRules.MaxLengthRuleArgs("BillToPostalCode",10));
        }
           #endregion
        #region Overrides
        /// <summary>
        /// Data structure with backing fields for entity class.
        /// </summary>
        protected override ICloneable BackupData
        {
            get
            {
                return backupData;
            }
            set
            {
                backupData = value as WebContribImp_CSIEntityData;
            }
        }
        /// <summary>
        /// Data structure with backing fields for entity class.
        /// </summary>
        protected override ICloneable EntityData
        {
            get
            {
                return entityData;
            }
            set
            {
                entityData = value as WebContribImp_CSIEntityData;
            }
        }
        #endregion

    }
}    

